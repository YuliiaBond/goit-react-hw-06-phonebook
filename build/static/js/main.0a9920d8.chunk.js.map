{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.js","components/Form/Form.js","components/Filter/Filter.js","components/Contact/Contact.js","components/Contacts/Contacts.js","App.js","index.js","components/Form/Form.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/Contacts/Contacts.module.css"],"names":["module","exports","Container","children","className","style","container","Form","onSubmit","useState","name","setName","number","setNumber","nameInputId","uuidv4","numberInpntId","handleChange","event","currentTarget","value","form","preventDefault","label","input","type","pattern","title","required","onChange","id","btn","typy","Filter","Contact","onDeleteContact","onClick","Contacts","contacts","list","map","item","initialContacts","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","contact","includes","alert","prevState","normalizeFilter","toLowerCase","getVisibleContacts","contactId","prevContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,UAAY,+B,2HCIfC,EAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,qBAAKC,UAAWC,IAAMC,UAAtB,SAAkCH,K,gBCEvD,SAASI,EAAT,GAA2B,IAAZC,EAAW,EAAXA,SAC1B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAcC,cACdC,EAAgBD,cAGhBE,EAAe,SAAAC,GACjB,MAAwBA,EAAMC,cAAtBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MAEd,OAAQV,GACJ,IAAK,OACDC,EAAQS,GACR,MAEJ,IAAK,SACDP,EAAUO,GACV,MAEJ,QACI,SAgBR,OACI,uBAAMhB,UAAWC,IAAMgB,KAAMb,SAbjB,SAAAU,GAChBA,EAAMI,iBAEDZ,GAASE,IAIdJ,EAASE,EAAME,GACfD,EAAQ,IACRE,EAAU,MAIN,UACI,wBAAOT,UAAWC,IAAMkB,MAAxB,iBAEA,uBACInB,UAAWC,IAAMmB,MACjBC,KAAK,OACLf,KAAK,OACLgB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRR,MAAOV,EACPmB,SAAUZ,EACVa,GAAIhB,OAIR,wBAAOV,UAAWC,IAAMkB,MAAxB,mBAEA,uBACInB,UAAWC,IAAMmB,MACjBC,KAAK,MACLf,KAAK,SACLgB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRR,MAAOR,EACPiB,SAAUZ,EACVa,GAAId,OAIR,wBAAQZ,UAAWC,IAAM0B,IAAKC,KAAK,SAAnC,4B,oBC1DDC,EAZA,SAAC,GAAD,IAAGb,EAAH,EAAGA,MAAOS,EAAV,EAAUA,SAAV,OACX,wBAAOzB,UAAWC,IAAMkB,MAAxB,kCAEI,uBAAOnB,UAAWC,IAAMmB,MAAOC,KAAK,OAAOL,MAAOA,EAAOS,SAAUA,Q,gBCc5DK,EAjBC,SAAC,GAAD,IAAExB,EAAF,EAAEA,KAAME,EAAR,EAAQA,OAAQuB,EAAhB,EAAgBA,gBAAhB,OACZ,qCACI,oBAAG/B,UAAWC,IAAMK,KAApB,UACKA,EADL,KACY,+BAAOE,OAEnB,wBAAQR,UAAWC,IAAM0B,IAAKK,QAASD,EAAvC,wB,gBCgBOE,EApBE,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUH,EAAZ,EAAYA,gBAAZ,OACb,oBAAI/B,UAAWC,IAAMkC,KAArB,SACKD,EAASE,KAAI,gBAAGV,EAAH,EAAGA,GAAIpB,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACV,oBAAaR,UAAWC,IAAMoC,KAA9B,SACI,cAAC,EAAD,CACI/B,KAAMA,EACNE,OAAQA,EACRuB,gBAAiB,kBAAMA,EAAgBL,OAJtCA,SCDfY,EAAkB,CACpB,CAACZ,GAAI,OAAQpB,KAAM,gBAAiBE,OAAQ,aAC5C,CAACkB,GAAI,OAAQpB,KAAM,iBAAkBE,OAAQ,aAC7C,CAACkB,GAAI,OAAQpB,KAAM,gBAAiBE,OAAQ,aAC5C,CAACkB,GAAI,OAAQpB,KAAM,iBAAkBE,OAAQ,cAGlC,SAAS+B,IACtB,MAAgClC,oBAAS,WAAO,IAAD,EAC7C,iBAAOmC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBAA9C,QAA8DN,KADhE,mBAAOJ,EAAP,KAAiBW,EAAjB,KAGA,EAA4BxC,mBAAS,IAArC,mBAAOyC,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRN,OAAOC,aAAaM,QAAQ,WAAYT,KAAKU,UAAUhB,MACtD,CAACA,IAoCJ,OACI,eAAC,EAAD,WAEE,2CAEA,cAAC/B,EAAD,CAAMC,SAvCO,SAAEE,EAAME,GAEzB,IAAM2C,EAAU,CACdzB,GAAIf,cACJL,OACAE,UAGE0B,EAASE,KAAI,SAAAe,GAAO,OAAIA,EAAQ7C,QAAM8C,SAAS9C,GACjD+C,MAAM,GAAD,OAAI/C,EAAJ,4BAELuC,GAAY,SAAAS,GAAS,OAAKH,GAAL,mBAAiBG,UA8BpC,0CAEA,cAAC,EAAD,CACEtC,MAAO8B,EACPrB,SA7Bc,SAAAX,GACpBiC,EAAUjC,EAAMC,cAAcC,UA+B1B,cAAC,EAAD,CACEkB,SA7BmB,WAGzB,IAAMqB,EAAkBT,EAAOU,cAC/B,OAAOtB,EAASY,QAAO,SAAAK,GAAO,OAC5BA,EAAQ7C,KAAKkD,cAAcJ,SAASG,MAwBtBE,GACV1B,gBApBc,SAAA2B,GACpBb,GAAY,SAAAc,GAAY,OAAIA,EAAab,QAAO,SAAAK,GAAO,OAAIA,EAAQzB,KAAOgC,cClD9EE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACvB,EAAD,MAEFwB,SAASC,eAAe,U,kBCR1BpE,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,IAAM,oB,kBCA1GD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,kBCAxDD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,IAAM,uB,kBCArDD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,0B","file":"static/js/main.0a9920d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2-itI\"};","import React from 'react';\r\nimport style from'./Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={style.container}>{children}</div>;\r\n\r\nexport default Container;","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Form.module.css'\r\n\r\nexport default function Form({onSubmit}) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    \r\n    const nameInputId = uuidv4();\r\n    const numberInpntId = uuidv4();\r\n    \r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.currentTarget;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            \r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            \r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const hadleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (!name || !number) {\r\n            return;\r\n        }\r\n\r\n        onSubmit(name, number);\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n    \r\n        return (\r\n            <form className={style.form} onSubmit={hadleSubmit}>\r\n                <label className={style.label}>\r\n                Name\r\n                <input\r\n                    className={style.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                    id={nameInputId}\r\n                />\r\n                </label>\r\n\r\n                <label className={style.label}>\r\n                Number\r\n                <input\r\n                    className={style.input}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    value={number}\r\n                    onChange={handleChange}\r\n                    id={numberInpntId}\r\n                />\r\n                </label>\r\n\r\n                <button className={style.btn} typy=\"submit\">Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\nForm.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.number,\r\n};\r\n\r\n\r\n\r\n// class Form extends Component {\r\n//     static propTypes = {\r\n//         name: PropTypes.string,\r\n//         number: PropTypes.number,\r\n//     };\r\n    \r\n//     state = {\r\n//         name: '',\r\n//         number: ''\r\n//     };\r\n\r\n//     nameInputId = uuidv4();\r\n//     numberInpntId = uuidv4();\r\n\r\n//     handleChange = event => {\r\n//     const { name, value } = event.currentTarget;\r\n    \r\n//     this.setState({ [name]: value })\r\n//     };\r\n\r\n//     hadleSubmit = event => {\r\n//         event.preventDefault();\r\n\r\n//         this.props.onSubmit(this.state.name, this.state.number);\r\n\r\n//         this.setState({ name: '', number: '' });\r\n//     };\r\n\r\n//         render() {\r\n//         return (\r\n//             <form className={style.form} onSubmit={this.hadleSubmit}>\r\n//                 <label className={style.label} htmlFor={this.nameInputId}>\r\n//                 Name\r\n//                 <input\r\n//                     className={style.input}\r\n//                     type=\"text\"\r\n//                     name=\"name\"\r\n//                     pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//                     title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//                     required\r\n//                     value={this.state.name}\r\n//                     onChange={this.handleChange}\r\n//                     id={this.nameInputId}\r\n//                 />\r\n//                 </label>\r\n\r\n//                 <label className={style.label} htmlFor={this.numberInpntId}>\r\n//                 Number\r\n//                 <input\r\n//                     className={style.input}\r\n//                     type=\"tel\"\r\n//                     name=\"number\"\r\n//                     pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//                     title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n//                     required\r\n//                     value={this.state.number}\r\n//                     onChange={this.handleChange}\r\n//                     id={this.numberInpntId}\r\n//                 />\r\n//                 </label>\r\n\r\n//                 <button className={style.btn} typy=\"submit\">Add contact</button>\r\n//             </form>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default Form;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={style.label}>\r\n        Find contacts by name\r\n        <input className={style.input} type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Contact.module.css';\r\n\r\nconst Contact = ({name, number, onDeleteContact}) => (  \r\n    <>\r\n        <p className={style.name}>\r\n            {name}: <span>{number}</span>\r\n        </p>\r\n        <button className={style.btn} onClick={onDeleteContact}>\r\n            Delete\r\n        </button>\r\n    </>\r\n);\r\n\r\nContact.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;","import React from 'react';\r\nimport Contact from '../Contact/Contact'\r\nimport PropTypes from 'prop-types';\r\nimport style from './Contacts.module.css'\r\n\r\nconst Contacts = ({contacts, onDeleteContact}) => (\r\n    <ul className={style.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n            <li key={id} className={style.item}>\r\n                <Contact\r\n                    name={name}\r\n                    number={number}\r\n                    onDeleteContact={() => onDeleteContact(id)}\r\n                />\r\n        </li>\r\n        ))}\r\n        \r\n    </ul>\r\n);\r\n\r\nContacts.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Container from './components/Container';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport Contacts from './components/Contacts';\n\nconst initialContacts = [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n]\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? initialContacts});\n    \n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n  \n  const addContact = ( name, number ) => {\n    \n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (contacts.map(contact => contact.name).includes(name)) {\n      alert(`${name} is already in contacs.`)\n    } else {\n      setContacts(prevState => [contact, ...prevState]);\n    }\n  };\n      \n\n  const  changeFilter = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    \n\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  }\n  \n\n  const deleteContact = contactId => {\n    setContacts(prevContacts => prevContacts.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n      <Container>\n\n        <h1>Phonebook</h1>\n\n        <Form onSubmit={addContact} />\n\n        <h2>Contacts</h2>\n\n        <Filter\n          value={filter}\n          onChange={changeFilter}\n          />\n\n        <Contacts\n          contacts={getVisibleContacts()}\n          onDeleteContact={deleteContact}\n        />\n        \n      </Container>\n    )\n  }\n\n\n// class App extends Component {\n//   state = {\n//   contacts: [\n//     {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n//     {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n//     {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n//     {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n//   ],\n//   filter: '',\n//   }\n\n//   addContact = (name, number) => {\n//     const contact = {\n//       id: uuidv4(),\n//       name,\n//       number,\n//     };\n\n    // if (!this.state.contacts.map(contact => contact.name).includes(name)) {\n    //   this.setState(({ contacts }) => ({\n    //   contacts: [contact, ...contacts],\n    // }));\n    // } else {\n    //   alert(`${name} is already in contacs.`)\n    // }\n\n    \n//   };\n\n  // changeFilter = event => {\n  //   this.setState({ filter: event.currentTarget.value });\n  // };\n\n  // getVisibleContacts = () => {\n  //   const { filter, contacts } = this.state;\n  //   const normalizeFilter = filter.toLowerCase();\n\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normalizeFilter),\n  //   );\n  // };\n\n  // deleteContact = contactId => {\n  //   this.setState(prevState => ({\n  //     contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n  //   }));\n  // };\n\n//   componentDidMount() {\n//     const contacts = localStorage.getItem('contacts');\n//     const parselContacts = JSON.parse(contacts);\n\n//     if (parselContacts) {\n//       this.setState({ contacts: parselContacts });\n//     };\n    \n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n      \n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   render() {\n//     const { filter } = this.state;\n//     const visibleContacts = this.getVisibleContacts();\n\n//     return (\n//       <Container>\n\n//         <h1>Phonebook</h1>\n\n//         <Form onSubmit={this.addContact} />\n\n//         <h2>Contacts</h2>\n\n//         <Filter\n//           value={filter}\n//           onChange={this.changeFilter}\n//           />\n\n//         <Contacts\n//           contacts={visibleContacts}\n//           onDeleteContact={this.deleteContact}\n//         />\n        \n//       </Container>\n//     )\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2Sfaf\",\"label\":\"Form_label__2-SNU\",\"input\":\"Form_input__2rDmY\",\"btn\":\"Form_btn__2R3ux\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2yTRh\",\"input\":\"Filter_input__3n9F3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__16fD7\",\"btn\":\"Contact_btn__mds00\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__XXhtJ\",\"item\":\"Contacts_item__FoF28\"};"],"sourceRoot":""}